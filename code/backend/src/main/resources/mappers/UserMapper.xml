<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.bu.cs673.secondhand.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="edu.bu.cs673.secondhand.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_number" jdbcType="VARCHAR" property="accountNumber" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="sign_in_time" jdbcType="TIMESTAMP" property="signInTime" />
    <result column="user_status" jdbcType="TINYINT" property="userStatus" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_active" jdbcType="BIT" property="isActive" />
    <result column="activation_token" jdbcType="VARCHAR" property="activationToken" />
    <result column="token_expiry" jdbcType="TIMESTAMP" property="tokenExpiry" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_number, user_password, nickname, avatar, sign_in_time, user_status, email, 
    is_active, activation_token, token_expiry, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="edu.bu.cs673.secondhand.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sh_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sh_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sh_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.bu.cs673.secondhand.domain.UserExample">
    delete from sh_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.bu.cs673.secondhand.domain.User">
    insert into sh_user (id, account_number, user_password, 
      nickname, avatar, sign_in_time, 
      user_status, email, is_active, 
      activation_token, token_expiry, created_at, 
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{accountNumber,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{signInTime,jdbcType=TIMESTAMP}, 
      #{userStatus,jdbcType=TINYINT}, #{email,jdbcType=VARCHAR}, #{isActive,jdbcType=BIT}, 
      #{activationToken,jdbcType=VARCHAR}, #{tokenExpiry,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.bu.cs673.secondhand.domain.User">
    insert into sh_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="accountNumber != null">account_number,</if>
        <if test="email != null">email,</if>
        <if test="userPassword != null">user_password,</if>
        <if test="isActive != null">is_active,</if>
        <if test="activationToken != null">activation_token,</if>
        <if test="tokenExpiry != null">token_expiry,</if>
        <if test="createdAt != null">created_at,</if>
        <if test="updatedAt != null">updated_at,</if>
        <if test="nickname != null">nickname,</if>
        <if test="avatar != null">avatar,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="accountNumber != null">#{accountNumber,jdbcType=VARCHAR},</if>
        <if test="email != null">#{email,jdbcType=VARCHAR},</if>
        <if test="userPassword != null">#{userPassword,jdbcType=VARCHAR},</if>
        <if test="isActive != null">#{isActive,jdbcType=BIT},</if>
        <if test="activationToken != null">#{activationToken,jdbcType=VARCHAR},</if>
        <if test="tokenExpiry != null">#{tokenExpiry,jdbcType=TIMESTAMP},</if>
        <if test="createdAt != null">#{createdAt,jdbcType=TIMESTAMP},</if>
        <if test="updatedAt != null">#{updatedAt,jdbcType=TIMESTAMP},</if>
        <if test="nickname != null">#{nickname,jdbcType=VARCHAR},</if>
        <if test="avatar != null">#{avatar,jdbcType=VARCHAR},</if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.bu.cs673.secondhand.domain.UserExample" resultType="java.lang.Long">
    select count(*) from sh_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sh_user
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.accountNumber != null">
        account_number = #{row.accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="row.userPassword != null">
        user_password = #{row.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="row.nickname != null">
        nickname = #{row.nickname,jdbcType=VARCHAR},
      </if>
      <if test="row.avatar != null">
        avatar = #{row.avatar,jdbcType=VARCHAR},
      </if>
      <if test="row.signInTime != null">
        sign_in_time = #{row.signInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.userStatus != null">
        user_status = #{row.userStatus,jdbcType=TINYINT},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.isActive != null">
        is_active = #{row.isActive,jdbcType=BIT},
      </if>
      <if test="row.activationToken != null">
        activation_token = #{row.activationToken,jdbcType=VARCHAR},
      </if>
      <if test="row.tokenExpiry != null">
        token_expiry = #{row.tokenExpiry,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sh_user
    set id = #{row.id,jdbcType=BIGINT},
      account_number = #{row.accountNumber,jdbcType=VARCHAR},
      user_password = #{row.userPassword,jdbcType=VARCHAR},
      nickname = #{row.nickname,jdbcType=VARCHAR},
      avatar = #{row.avatar,jdbcType=VARCHAR},
      sign_in_time = #{row.signInTime,jdbcType=TIMESTAMP},
      user_status = #{row.userStatus,jdbcType=TINYINT},
      email = #{row.email,jdbcType=VARCHAR},
      is_active = #{row.isActive,jdbcType=BIT},
      activation_token = #{row.activationToken,jdbcType=VARCHAR},
      token_expiry = #{row.tokenExpiry,jdbcType=TIMESTAMP},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.bu.cs673.secondhand.domain.User">
    update sh_user
    <set>
      <if test="accountNumber != null">
        account_number = #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="signInTime != null">
        sign_in_time = #{signInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="activationToken != null">
        activation_token = #{activationToken,jdbcType=VARCHAR},
      </if>
      <if test="tokenExpiry != null">
        token_expiry = #{tokenExpiry,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.bu.cs673.secondhand.domain.User">
    update sh_user
    set account_number = #{accountNumber,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      sign_in_time = #{signInTime,jdbcType=TIMESTAMP},
      user_status = #{userStatus,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=BIT},
      activation_token = #{activationToken,jdbcType=VARCHAR},
      token_expiry = #{tokenExpiry,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findByEmail" resultType="edu.bu.cs673.secondhand.domain.User">
    SELECT * FROM sh_user WHERE email = #{email} LIMIT 1
  </select>

  <select id="findByEmailAndToken" resultMap="BaseResultMap">
    SELECT * FROM sh_user WHERE email = #{email} AND activation_token = #{activationToken}
  </select>

  <select id="existsByAccountNumber" resultType="boolean">
    SELECT COUNT(*) > 0 FROM sh_user WHERE account_number = #{accountNumber}
  </select>
</mapper>